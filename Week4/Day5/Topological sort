class Solution
{
    //Function to return list containing vertices in Topological order. 
    static int[] topoSort(int V, ArrayList<ArrayList<Integer>> adj) 
    {
        // add your code here
        int[] indegree=new int[V];
        for(int i=0;i<adj.size();i++){
            for(int j:adj.get(i))
                indegree[j]++;
        }
        Queue<Integer>q=new LinkedList<>();
        int[] ans=new int[V];
        int k=0;
        for(int i=0;i<V;i++){
            if(indegree[i]==0)
                q.add(i);
        }
        while(!q.isEmpty()){
            int node=q.poll();
            ans[k++]=node;
            for(int num:adj.get(node)){
                indegree[num]--;
                if(indegree[num]==0)
                q.add(num);
            }
        }
        return ans;
    }
}