class Solution {
    // Function to return a list containing the DFS traversal of the graph.
    public ArrayList<Integer> dfsOfGraph(int V, ArrayList<ArrayList<Integer>> adj) {
        // Code here
        boolean[] visited=new boolean[V];
        ArrayList<Integer>ans=new ArrayList<>();
        dfs(0,visited,ans,adj);
        return ans;
    }
    
    static void dfs(int node,boolean[] visited,ArrayList<Integer>ans,ArrayList<ArrayList<Integer>> adj)
    {
        visited[node]=true;
        ans.add(node);
        for(int neigh:adj.get(node))
        {
            if(!visited[neigh])
            dfs(neigh,visited,ans,adj);
        }
    }
}