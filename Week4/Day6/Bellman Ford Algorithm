class Solution {
    static int[] bellman_ford(int V, ArrayList<ArrayList<Integer>> edges, int S) {
        // Write your code here
        int[] dist=new int[V];
        Arrays.fill(dist,100000000);
        dist[S]=0;
        for(int i=0;i<V-1;i++){
            for(ArrayList<Integer> e:edges){
                int u=e.get(0);
                int v=e.get(1);
                int w=e.get(2);
                if(dist[u]!=100000000 && dist[u]+w<dist[v]){
                    dist[v]=dist[u]+w;
                }
            }
        }
        for(ArrayList<Integer> e:edges){
            int u=e.get(0);
            int v=e.get(1);
            int w=e.get(2);
            if(dist[u]!=100000000 && dist[u]+w<dist[v]){
                return new int[]{-1};
            }
        }
        return dist;
    }
}