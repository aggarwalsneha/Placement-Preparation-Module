class Solution {
    public List<List<Integer>> fourSum(int[] nums, int target) {
        List<List<Integer>> ans=new ArrayList<>();
        int n=nums.length;
        Arrays.sort(nums);
        for(int i=0;i<n;i++)
        {
            for(int j=i+1;j<n;j++)
            {
                long k=(long)target-nums[i]-nums[j];
                int left=j+1;
                int right=n-1;
                while(left<right)
                {
                    long sum=(long)(nums[left]+nums[right]);
                    if(sum<k)
                        left++;
                    else if(sum>k)
                        right--;
                    else{
                        List<Integer>temp=new ArrayList<>();
                        temp.add(nums[i]);
                        temp.add(nums[j]);
                        temp.add(nums[left]);
                        temp.add(nums[right]);
                        ans.add(temp);
                        while(left<right && nums[left]==temp.get(2))
                            left++;
                        while(left<right && nums[right]==temp.get(3))
                            right--;
                    }
                }
                while(j+1<n && nums[j+1]==nums[j])
                    j++;
            }
            while(i+1<n && nums[i+1]==nums[i])
                i++;
        }
        return ans;
    }
}