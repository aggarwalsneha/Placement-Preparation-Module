class solve {
    // Function to determine if graph can be coloured with at most M colours
    // such
    // that no two adjacent vertices of graph are coloured with same colour.
    public boolean graphColoring(boolean graph[][], int m, int n) {
        // Your code here
        int[] color=new int[n];
        return fill(0,graph,m,n,color);
    }
    public boolean fill(int node,boolean graph[][],int m,int n,int[] color){
        if(node==n)
        return true;
        for(int i=1;i<=m;i++){
            if(safe(graph[node],i,color)){
                color[node]=i;
                if(fill(node+1,graph,m,n,color))
                return true;
                
                color[node]=0;
            }
        }
        return false;
    }
    
    public boolean safe(boolean[] graph,int c,int[] arr){
        for(int i=0;i<graph.length;i++){
            if(graph[i] && arr[i]==c)
            return false;
        }
        return true;
    }
}
